# Janus Application Development Configuration
spring:
  application:
    name: ${APP_NAME:janus}
  # PostgreSQL Datasource Configuration
  datasource:
    url: ${DB_URL}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    driver-class-name: ${DB_DRIVER:org.postgresql.Driver}
  data:
      redis:
        host: ${REDIS_HOST:localhost}
        password: ${REDIS_PASSWORD:}
        port: ${REDIS_PORT:6379}
    # Flyway Configuration
  # Automatically run migrations on startup from classpath:db/migration
  flyway:
    locations: ${FLYWAY_LOCATIONS:classpath:db/migration}
  # Hibernate Configuration
  # Validate the schema against the database, don't create or update it.
  # Flyway is responsible for managing the schema.
  jpa:
    hibernate:
      ddl-auto: ${JPA_DDL_AUTO:validate}
  pulsar:
    client:
      service-url: ${PULSAR_SERVICE_URL:pulsar://localhost:6650}
      authentication:
        plugin-class-name: org.apache.pulsar.client.impl.auth.AuthenticationToken
        param:
          token: ${PULSAR_AUTH_TOKEN:}

    consumer:
      subscription:
        name: ${PULSAR_SUBSCRIPTION_NAME:janus-subscription}
        initial-position: ${PULSAR_SUBSCRIPTION_INITIAL_POSITION:Latest}

  # OpenAI Configuration
  ai:
    openai:
      base-url: ${OPENAI_BASE_URL}
      chat:
        options:
          model: ${OPENAI_CHAT_MODEL}
        completions-path: ${OPENAI_COMPLETIONS_PATH:/v1/chat/completions}
      embedding:
        options:
          model: ${OPENAI_EMBEDDING_MODEL}
      api-key: ${OPENAI_API_KEY}
    vectorstore:
      redis:
        index-name: default-index
        initialize-schema: true

# Custom application properties
app:
  pulsar:
    topics:
      file-processing: ${FILE_PROCESSING_TOPIC:persistent://public/default/file-processing-topic}
      tracking-events: ${TRACKING_EVENTS_TOPIC:persistent://public/default/tracking-events-topic}

server:
  port: ${SERVER_PORT:9901}
oss:
  bucket-name: ${OSS_ACCESS_BUCKET_NAME}
  endpoint: ${OSS_ACCESS_ENDPOINT}
  access-key: ${OSS_ACCESS_KEY_ID}
  secret-key: ${OSS_ACCESS_KEY_SECRET}

